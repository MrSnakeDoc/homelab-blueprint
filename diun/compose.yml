---
networks:
  app-network:
    external: true

services:
  diun:
    image: crazymax/diun:latest
    container_name: diun
    command: serve
    volumes:
      - "~/docker/diun/data:/data"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - "TZ=Europe/Paris"
      - "LOG_LEVEL=info"
      - "DIUN_WATCH_WORKERS=20"
      - "DIUN_WATCH_SCHEDULE=0 */6 * * *"
      - "DIUN_WATCH_JITTER=30s"
      - "DIUN_WATCH_RUNONSTARTUP=true"
      - "DIUN_PROVIDERS_DOCKER=true"
      - "DIUN_PROVIDERS_DOCKER_WATCHBYDEFAULT=true"
      - "DIUN_NOTIF_NTFY_ENDPOINT=${DIUN_NOTIF_NTFY_ENDPOINT}"
      - "DIUN_NOTIF_NTFY_TOPIC=dockerupdates"
      - "DIUN_NOTIF_NTFY_PRIORITY=1"
      - "DIUN_NOTIF_NTFY_TEMPLATETITLE={{ .Entry.Image }} {{ if (eq .Entry.Status \"new\") }}is available{{ else }}has been updated{{ end }}"
      - "DIUN_NOTIF_NTFY_TEMPLATEBODY=Docker tag {{ if .Entry.Image.HubLink }}[**{{ .Entry.Image }}**]({{ .Entry.Image.HubLink }}){{ else }}**{{ .Entry.Image }}**{{ end }} which you subscribed to through {{ .Entry.Provider }} provider {{ if (eq .Entry.Status \"new\") }}is available{{ else }}has been updated{{ end }} on {{ .Entry.Image.Domain }} registry (triggered by {{ .Meta.Hostname }} host)."
    labels:
      - "diun.enable=true"
    restart: always
    networks:
      - app-network