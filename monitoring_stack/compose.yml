---
networks:
  app-network:
    external: true

services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ~/docker/monitoring_stack/grafana_data:/var/lib/grafana
    environment:
      GF_SERVER_ROOT_URL: $GF_SERVER_ROOT_URL
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: false
      GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
      GF_AUTH_GENERIC_OAUTH_NAME: "authentik"
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: $GF_AUTH_GENERIC_OAUTH_CLIENT_ID
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: $GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
      GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email"
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: $GF_AUTH_GENERIC_OAUTH_AUTH_URL
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: $GF_AUTH_GENERIC_OAUTH_TOKEN_URL
      GF_AUTH_GENERIC_OAUTH_API_URL: $GF_AUTH_GENERIC_OAUTH_API_URL
      GF_AUTH_SIGNOUT_REDIRECT_URL: $GF_AUTH_SIGNOUT_REDIRECT_URL
      GF_AUTH_OAUTH_AUTO_LOGIN: $GF_AUTH_OAUTH_AUTO_LOGIN
      GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: $GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.grafana.entrypoints=http,https'
      - 'traefik.http.routers.grafana.rule=Host(`grafana.<yourinternaldomain>`)'
      - 'traefik.http.services.grafana.loadbalancer.server.port=3000'
      - 'traefik.http.routers.grafana.service=grafana'
      - 'traefik.http.routers.grafana.tls=true'
      - 'traefik.http.routers.grafana.tls.certresolver=prod'
    user: "1000"
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ~/homelab/monitoring_stack/prometheus_config/:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.prometheus.entrypoints=http,https'
      - 'traefik.http.routers.prometheus.rule=Host(`prometheus.<yourinternaldomain>`)'
      - 'traefik.http.services.prometheus.loadbalancer.server.port=9090'
      - 'traefik.http.routers.prometheus.service=prometheus'
      - 'traefik.http.routers.prometheus.tls=true'
      - 'traefik.http.routers.prometheus.tls.certresolver=prod'
    depends_on:
      - cadvisor
      - node_exporter
    restart: unless-stopped
    networks:
      - app-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    labels:
      - traefik.enable=true
      - traefik.http.routers.cadvisor.entrypoints=http,https
      - traefik.http.routers.cadvisor.rule=Host(`cadvisor.<yourinternaldomain>`)
      - traefik.http.routers.cadvisor.tls=true
      - traefik.http.routers.cadvisor.tls.certresolver=prod
      - 'io.prometheus.scrape=true'
    devices:
      - /dev/kmsg
    restart: unless-stopped
    networks:
      - app-network

  node_exporter:
    image: quay.io/prometheus/node-exporter
    container_name: node_exporter
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave
    networks:
      - app-network
